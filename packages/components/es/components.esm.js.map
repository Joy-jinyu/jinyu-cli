{"version":3,"file":"components.esm.js","sources":["../src/upload-gallery/input-link-modal.tsx","../src/upload-gallery/index.tsx"],"sourcesContent":["import { Form, Image, Input, Modal } from 'antd'\nimport React, { useState, useCallback } from 'react'\n\ninterface IInputLinkModal {\n  visible: boolean\n  onClose: () => void\n  onSave: (link: string) => void\n}\n\nconst LEGAL_HTTP_SOURCE_REGULAR = /^(?:http(s)?:\\/\\/)(\\S)*(\\.)+/\n\nexport const InputLinkModal = ({ visible, onClose, onSave }: IInputLinkModal) => {\n  const [form] = Form.useForm()\n  const [imageLink, setImageLink] = useState('')\n\n  const imageChange = (e: any) => {\n    setImageLink(e.target.value)\n  }\n\n  const handleOk = useCallback(async () => {\n    const values = await form.validateFields()\n    onSave(values.link)\n    form.resetFields()\n    setImageLink('')\n  }, [])\n\n  const handleCancel = () => {\n    onClose()\n  }\n\n  return (\n    <Modal\n      open={visible}\n      visible={visible}\n      title=\"图片地址\"\n      onOk={handleOk}\n      onCancel={handleCancel}\n    >\n      <Form form={form} name=\"name\">\n        <Form.Item\n          label=\"图片链接\"\n          name=\"link\"\n          rules={[\n            { required: true, message: '请输入图片链接' },\n            () => ({\n              validator(_, value) {\n                if (!!value && !LEGAL_HTTP_SOURCE_REGULAR.test(value as string)) {\n                  return Promise.reject(\n                    new Error('请输入填写正确的地址，例：https://www.baidu.com')\n                  )\n                }\n                return Promise.resolve()\n              }\n            })\n          ]}\n          validateFirst={true}\n        >\n          <Input allowClear placeholder=\"图片链接\" onChange={imageChange} />\n        </Form.Item>\n        {imageLink && LEGAL_HTTP_SOURCE_REGULAR.test(imageLink) && (\n          <Form.Item>\n            <Image height={100} src={imageLink} />\n          </Form.Item>\n        )}\n      </Form>\n    </Modal>\n  )\n}\n","import { PlusOutlined } from '@ant-design/icons'\nimport { Modal, Upload } from 'antd'\nimport type { RcFile } from 'antd/es/upload'\nimport type { UploadFile } from 'antd/es/upload/interface'\nimport mockjs from 'mockjs'\nimport { useCallbackRef } from '@ovometajs/hooks'\nimport React, { useState, useEffect } from 'react'\nimport { DragDropContext, Draggable, Droppable, DropResult } from 'react-beautiful-dnd'\nimport { InputLinkModal } from './input-link-modal'\nimport './styles.less'\n\ninterface IUploadGallery {\n  action: string\n  value?: string\n  onChange?: (value: UploadFile[]) => void\n  multiple?: boolean\n  max?: number\n}\n\nexport const UploadGallery = ({ action, value, onChange, multiple, max = 1 }: IUploadGallery) => {\n  const [inputLinkOpen, setInputLinkOpen] = useState(false)\n  const [previewOpen, setPreviewOpen] = useState(false)\n  const [previewImage, setPreviewImage] = useState('')\n  const [previewTitle, setPreviewTitle] = useState('')\n  /**\n   * {\n   *  uid: '-1',\n   *   name: 'image.png',\n   *   status: 'done',\n   *   url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n   * },\n   */\n  const [fileList, setFileList] = useState<any[]>([])\n\n  useEffect(() => {\n    /**\n     * 初始化渲染时才调用\n     */\n    if (value && !fileList.length) {\n      const fileLinkList = Array.isArray(value) ? value : [value]\n      setFileList(\n        fileLinkList.map((link, index) => {\n          return {\n            uid: mockjs.Random.id(),\n            index: index + 1,\n            name: link.split('/').slice(-1)[0],\n            status: 'done',\n            url: link\n          }\n        })\n      )\n    }\n  }, [value])\n\n  const handleCancel = () => setPreviewOpen(false)\n\n  const handlePreview = async (file: UploadFile) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj as RcFile)\n    }\n\n    setPreviewImage(file.url || (file.preview as string))\n    setPreviewOpen(true)\n    setPreviewTitle(file.name || file.url!.substring(file.url!.lastIndexOf('/') + 1))\n  }\n\n  const handleChange = ({ fileList: newFileList }: any) => {\n    setFileList(\n      newFileList.map((file: any, index: number) => {\n        return {\n          ...file,\n          uid: file.uid || mockjs.Random.id(),\n          index: index + 1\n        }\n      })\n    )\n    const emitFileLinks = newFileList.map(\n      (file: any) => file.response?.data || file.url || file.thumbUrl\n    )\n    onChange?.(multiple ? emitFileLinks : emitFileLinks[0] || undefined)\n  }\n\n  const handleInputLink = (e: any) => {\n    setInputLinkOpen(true)\n    e.stopPropagation()\n  }\n\n  const handleInputLinkSave = (link: string) => {\n    handleChange({\n      fileList: [\n        ...fileList,\n        {\n          uid: mockjs.Random.id(),\n          index: fileList.length + 1,\n          name: link.split('/').slice(-1)[0],\n          status: 'done',\n          url: link\n        }\n      ]\n    })\n    setInputLinkOpen(false)\n  }\n\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div style={{ marginTop: 8 }}>选择图片</div>\n      <div style={{ marginTop: 8 }} onClickCapture={handleInputLink}>\n        输入图片链接\n      </div>\n    </div>\n  )\n\n  const moveRow = useCallbackRef((result: DropResult) => {\n    const { source, destination } = result || {}\n    if (!destination || !source) {\n      return\n    }\n    const sourceIndex = source.index - 1\n    const destinationIndex = destination.index - 1\n    if (sourceIndex === destinationIndex) {\n      return\n    } else {\n      const dragRow = fileList[sourceIndex]\n      fileList.splice(sourceIndex, 1)\n      fileList.splice(destinationIndex, 0, dragRow)\n      setFileList(\n        fileList.map((file, index) => {\n          return {\n            uid: index + 1,\n            ...file\n          }\n        })\n      )\n    }\n  })\n\n  return (\n    <>\n      <DragDropContext onDragEnd={moveRow}>\n        <Droppable droppableId={`droppable-top`} direction=\"horizontal\">\n          {(provided) => (\n            <div\n              id=\"container\"\n              className=\"droppable-wrapper-item\"\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              <Upload\n                action={action}\n                multiple={multiple}\n                listType=\"picture-card\"\n                fileList={fileList}\n                onPreview={handlePreview}\n                onChange={handleChange}\n                maxCount={max}\n                itemRender={(originNode, file) => (\n                  <Draggable draggableId={`draggable-${file.uid}`} index={(file as any).index}>\n                    {(_provided) => (\n                      <div\n                        className=\"draggable-wrapper-item\"\n                        ref={_provided.innerRef}\n                        {..._provided.draggableProps}\n                        {..._provided.dragHandleProps}\n                      >\n                        {originNode}\n                      </div>\n                    )}\n                  </Draggable>\n                )}\n              >\n                {fileList.length >= max ? null : uploadButton}\n              </Upload>\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Modal\n        open={previewOpen}\n        visible={previewOpen}\n        title={previewTitle}\n        footer={null}\n        onCancel={handleCancel}\n      >\n        <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n      </Modal>\n      <InputLinkModal\n        visible={inputLinkOpen}\n        onClose={() => {\n          setInputLinkOpen(false)\n        }}\n        onSave={handleInputLinkSave}\n      />\n    </>\n  )\n}\n\nconst getBase64 = (file: RcFile): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onload = () => resolve(reader.result as string)\n    reader.onerror = (error) => reject(error)\n  })\n"],"names":["LEGAL_HTTP_SOURCE_REGULAR","InputLinkModal","_ref","visible","onClose","onSave","form","_slicedToArray","Form","useForm","_useState2","useState","imageLink","setImageLink","handleOk","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","validateFields","sent","link","resetFields","stop","React","Modal","open","title","onOk","onCancel","name","createElement","Item","label","rules","required","message","validator","_","value","test","Promise","reject","Error","resolve","validateFirst","Input","allowClear","placeholder","onChange","e","target","Image","height","src","UploadGallery","action","multiple","_ref$max","max","inputLinkOpen","setInputLinkOpen","_useState4","previewOpen","setPreviewOpen","_useState6","previewImage","setPreviewImage","_useState8","previewTitle","setPreviewTitle","_useState10","fileList","setFileList","useEffect","length","fileLinkList","Array","isArray","map","index","uid","mockjs","Random","id","split","slice","status","url","handlePreview","_ref2","file","preview","getBase64","originFileObj","substring","lastIndexOf","_x","apply","this","arguments","handleChange","_ref3","newFileList","_objectSpread","emitFileLinks","_file$response","response","data","thumbUrl","undefined","uploadButton","PlusOutlined","style","marginTop","onClickCapture","stopPropagation","moveRow","useCallbackRef","result","source","destination","sourceIndex","destinationIndex","dragRow","splice","Fragment","DragDropContext","onDragEnd","Droppable","droppableId","direction","provided","_extends","className","ref","innerRef","droppableProps","Upload","listType","onPreview","maxCount","itemRender","originNode","Draggable","draggableId","_provided","draggableProps","dragHandleProps","footer","alt","width","concat","_toConsumableArray","reader","FileReader","readAsDataURL","onload","onerror","error"],"mappings":"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"}